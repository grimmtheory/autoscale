# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"
ENV['VAGRANT_DEFAULT_PROVIDER'] = 'virtualbox'

# Start config
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

# Set commands to pass to all VMs during build time
$commonscript = <<COMMONSCRIPT
# Set verbose
set -v

# Set exit on error
set -e

# Set passwords
echo root:stack | chpasswd
echo vagrant:stack | chpasswd

# Populate hosts file
cat << EOF >> /etc/hosts

172.16.1.15 ubuntu1404
EOF

# Configure network interfaces
netcurrent=/etc/network/interfaces
netoriginal=/tmp/interfaces.original
netmodified=/tmp/interfaces.modified
cp $netcurrent $netoriginal
cat $netoriginal | sed -e 's/iface eth2 inet static/iface eth2 inet manual/g' > $netmodified
sed -i -e 's/address 172.16.2.15/up ifconfig $IFACE 0.0.0.0 up/g' $netmodified
echo -e "\tup ip link set $IFACE promisc on" >> $netmodified
echo -e "\tdown ip link set $IFACE promisc off" >> $netmodified
echo -e "\tdown ifconfig $IFACE 0.0.0.0 down" >> $netmodified
# cp $netmodified $netcurrent
## Neutron testing, disable hard set interfaces file for now
# cat << EOF > /tmp/interfaces
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

# The loopback network interface
# auto lo
# iface lo inet loopback

# API / host management network
# auto eth0
# iface eth0 inet static
#       address 10.0.2.15
#       netmask 255.255.255.0
#       gateway 10.0.2.2
#       dns-nameservers 10.0.2.3
# 
# Neutron bridge network
# auto eth1
# iface eth1 inet manual
#       up ifconfig $IFACE 0.0.0.0 up
#       up ip link set $IFACE promisc on
#       down ip link set $IFACE promisc off
#       down ifconfig $IFACE 0.0.0.0 down
# 
# EOF

# Speedup boot time
sed -i -e 's/sleep/# sleep/g' /etc/init/failsafe.conf

# Install Virtual Box guest additions
# Commented out temporarily to speed up builds
# apt-get -y install linux-headers-generic build-essential dkms
# apt-get -y install virtualbox-guest-utils
# wget http://dlc-cdn.sun.com/virtualbox/4.3.26/VBoxGuestAdditions_4.3.26.iso
# ISO method if needed
# mkdir /media/VBoxGuestAdditions
# mount -o loop,ro VBoxGuestAdditions_4.3.26.iso /media/VBoxGuestAdditions
# sh -c "/media/VBoxGuestAdditions/VBoxLinuxAdditions.run --nox11" >> /dev/null 2>&1
# rm -rf VBoxGuestAdditions_4.3.26.iso
# mkdir VBoxGuestAdditions_4.3.26
# cp -r /media/VBoxGuestAdditions/* ./VBoxGuestAdditions_4.3.26/
# umount /media/VBoxGuestAdditions
# rmdir /media/VBoxGuestAdditions

# Download devstack setup script
wget https://raw.githubusercontent.com/grimmtheory/autoscale/master/devstack-setup/vbox-devstack-setup.sh
chmod +x ./vbox-devstack-setup.sh
cp vbox-devstack-setup.sh /root

# Verify VT-x
# Commented out temporarily to speed up builds
# apt-get -y install cpu-checker
# kvm-ok

# Install git for devstack and some other tools
# Commented out temporarily to speed up builds
# apt-get -y install git nmap traceroute

# Reboot
# Commented out temporarily to speed up builds
# reboot

COMMONSCRIPT

  # Global options

  # Turn off shared folders
  config.vm.synced_folder ".", "/vagrant", id: "vagrant-root", disabled: true

  # Define first instance - ubuntu1404 all-in-one devstack box configuration
  config.vm.define "ubuntu1404" do |ubuntu1404_config|

    # Provide box name, download url, etc.
    ubuntu1404_config.vm.hostname = "ubuntu1404"
    ubuntu1404_config.vm.box = "base"
    ubuntu1404_config.vm.box_url = "https://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box"

    # Fix tty issue when passing scripts to inline
    # config.vm.provision "fix-no-tty", type: "shell" do |s|
    #     s.privileged = false
    #     s.inline = "sudo sed -i '/tty/!s/mesg n/tty -s \\&\\& mesg n/' /root/.profile"
    # end

    # Execute shell script within the new vm after it boots
    ubuntu1404_config.vm.provision "shell", inline: $commonscript

    # Configure networking

    # eth0 - Default route / NAT
    # Auto-configured by Virtual Box

    # eth1 - API / management network
    ubuntu1404_config.vm.network "private_network", :adapter => 2 ,ip: "172.16.1.15"

    # eth2 - Neutron / bridge network
    ubuntu1404_config.vm.network "private_network", :adapter => 3 ,ip: "172.16.2.15"

    # eth3 - Public network (bridged adapter config if needed)
    # ubuntu1404_config.vm.network "public_network", :adapter => 4 , type: "dhcp", :bridge => 'en0: Wi-Fi (AirPort)'

    # Define extra vm options
    ubuntu1404_config.vm.provider "virtualbox" do |vb|
        # Enable logging to ui
        vb.gui = true
        # Set CPU and RAM
        vb.customize ["modifyvm", :id, "--memory", "2048"]
        vb.customize ["modifyvm", :id, "--cpus", "2"]
        # Enable promiscuous mode on nics
        vb.customize ["modifyvm", :id, "--nicpromisc1", "allow-all"]
        vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
        vb.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
        # Set disk size, disabled for now requires local disk uuid to work
        # vb.customize ["modifyhd", "disk id", "--resize", "8192"]
        # Enable VT pass through
        vb.customize ["modifyvm", :id, "--hwvirtex", "on"]
        vb.customize ["modifyvm", :id, "--ioapic", "on"]
    end

  end

end
